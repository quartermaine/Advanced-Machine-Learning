layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,size=2,
panel.first = grid(25,25),ynab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),color="cornflowerblue",lwd=2)
polygon(density(x$transition),col="red",density=10)
plot(density(x$emission),col="cornflowerblue",lwd=2)
polygon(density(x$emission),col="red",density=10)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,size=2,
panel.first = grid(25,25),ynab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),color="cornflowerblue",lwd=2)
polygon(density(x$transition),col="red",density=10)
plot(density(x$emission),col="cornflowerblue",lwd=2)
polygon(density(x$emission),col="red",density=30)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,size=2,
panel.first = grid(25,25),ynab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),color="cornflowerblue",lwd=2)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,size=2,
panel.first = grid(25,25),ynab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,size=2,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,size=2,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),color="cornflowerblue",lwd=2)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),col="cornflowerblue",lwd=2)
polygon(density(x$transition),col="red",density=20)
plot(density(x$emission),col="cornflowerblue",lwd=2)
polygon(density(x$emission),col="red",density=20)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=20)
plot(density(x$emission),col="cornflowerblue",lwd=2,
main="Density Emission")
polygon(density(x$emission),col="red",density=20)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
plot(density(x$emission),col="cornflowerblue",lwd=2,
main="Density Emission")
polygon(density(x$emission),col="red",density=15)
Sd
transition_func=function(zt,t,upper_limit,sd_trans){
U=sample(1:3,1)
#
if(t==1){
zt=runif(1,0,upper_limit)
return(zt)
}
if(U==1){
zt= rnorm(1,zt[(t-1)],sd_trans)
}else if(U==2){
zt = rnorm(1,zt[(t-1)]+1,sd_trans)
}else{
zt= rnorm(1,zt[(t-1)]+2,sd_trans)
}
return(zt)
}
transition_func=function(zt,t,upper_limit,sd_trans){
U=sample(1:3,1)
#
if(t==1){
zt=runif(1,0,upper_limit)
return(zt)
}
if(U==1){
zt= rnorm(1,zt[(t-1)],sd_trans)
}else if(U==2){
zt = rnorm(1,zt[(t-1)]+1,sd_trans)
}else{
zt= rnorm(1,zt[(t-1)]+2,sd_trans)
}
return(zt)
}
emisssion_func=function(zt,t,sd_emiss){
U=sample(1:3,1)
#
if(U==1){
xt= rnorm(1,zt[(t)],sd,emiss)
}else if(U==2){
xt = rnorm(1,zt[(t)]+1,sd_emiss)
}else{
xt= rnorm(1,zt[(t)]+2,sd_emiss)
}
return(xt)
}
make_model=function(nTimes,upper_limit,sd_trans,sd_emiss){
zt=double(nTimes)
#
xt=double(nTimes)
#
for(time in 1:nTimes){
zt[time]=transition_func(zt,time,upper_limit,sd_trans)
xt[time]=emisssion_func(zt,time,sd_emiss)
}
return(list(transition=zt,emission=xt))
}
x=make_model(100,100,1,1)
emisssion_func=function(zt,t,sd_emiss){
U=sample(1:3,1)
#
if(U==1){
xt= rnorm(1,zt[(t)],sd_emiss)
}else if(U==2){
xt = rnorm(1,zt[(t)]+1,sd_emiss)
}else{
xt= rnorm(1,zt[(t)]+2,sd_emiss)
}
return(xt)
}
make_model=function(nTimes,upper_limit,sd_trans,sd_emiss){
zt=double(nTimes)
#
xt=double(nTimes)
#
for(time in 1:nTimes){
zt[time]=transition_func(zt,time,upper_limit,sd_trans)
xt[time]=emisssion_func(zt,time,sd_emiss)
}
return(list(transition=zt,emission=xt))
}
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$transition,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of Transition and Emission")
lines(1:100,x$emission,col="red",lwd=2)
plot(density(x$transition),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
plot(density(x$emission),col="cornflowerblue",lwd=2,
main="Density Emission")
polygon(density(x$emission),col="red",density=15)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=1)
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="Transition",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=1)
transition_func=function(zt,t,upper_limit,sd_trans){
U=sample(1:3,1)
#
if(t==1){
zt=runif(1,0,upper_limit)
return(zt)
}
if(U==1){
zt= rnorm(1,zt[(t-1)],sd_trans)
}else if(U==2){
zt = rnorm(1,zt[(t-1)]+1,sd_trans)
}else{
zt= rnorm(1,zt[(t-1)]+2,sd_trans)
}
return(zt)
}
emisssion_func=function(zt,t,sd_emiss){
U=sample(1:3,1)
#
if(U==1){
xt= rnorm(1,zt[(t)],sd_emiss)
}else if(U==2){
xt = rnorm(1,zt[(t)]+1,sd_emiss)
}else{
xt= rnorm(1,zt[(t)]+2,sd_emiss)
}
return(xt)
}
make_model=function(nTimes,upper_limit,sd_trans,sd_emiss){
zt=double(nTimes)
#
xt=double(nTimes)
#
for(time in 1:nTimes){
zt[time]=transition_func(zt,time,upper_limit,sd_trans)
xt[time]=emisssion_func(zt,time,sd_emiss)
}
return(list(states=zt,observations=xt))
}
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=1)
lines(1:100,x$observations,col="red",lwd=c(NA,2))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=c(NA,2))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1))
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=3)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
plot(density(x$emission),col="cornflowerblue",lwd=2,
main="Density Emission")
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
transition_func=function(zt,t,upper_limit,sd_trans){
U=sample(1:3,1)
#
if(t==1){
zt=runif(1,0,upper_limit)
return(zt)
}
if(U==1){
zt= rnorm(1,zt[(t-1)],sd_trans)
}else if(U==2){
zt = rnorm(1,zt[(t-1)]+1,sd_trans)
}else{
zt= rnorm(1,zt[(t-1)]+2,sd_trans)
}
return(zt)
}
emisssion_func=function(zt,t,sd_emiss){
U=sample(1:3,1)
#
if(U==1){
xt= rnorm(1,zt[(t)],sd_emiss)
}else if(U==2){
xt = rnorm(1,zt[(t)]+1,sd_emiss)
}else{
xt= rnorm(1,zt[(t)]+2,sd_emiss)
}
return(xt)
}
make_model=function(nTimes,upper_limit,sd_trans,sd_emiss){
zt=double(nTimes)
#
xt=double(nTimes)
#
for(time in 1:nTimes){
zt[time]=transition_func(zt,time,upper_limit,sd_trans)
xt[time]=emisssion_func(zt,time,sd_emiss)
}
return(list(states=zt,observations=xt))
}
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
density(x$states)
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
plot(density(x$emission),col="cornflowerblue",lwd=2,
main="Density Emission")
polygon(density(x$emission),col="red",density=15)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$transition),col="red",density=15)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$states),col="red",density=15)
plot(density(x$observations),col="cornflowerblue",lwd=2,
main="Density Emission")
polygon(density(x$observations),col="red",density=15)
obs=x$observations
particles=sample(100,obs,replace = T)
particles=sample(100,obs,replace = T) ; particles
obs
particles=sample(obs,100,replace = T) ; particles
particles=sample(obs,100,replace = T) ; particles
sapply(particles,function(y){y/sum(particles)})
transition_func=function(zt,t,upper_limit,sd_trans){
U=sample(1:3,1)
#
if(t==1){
zt=runif(1,0,upper_limit)
return(zt)
}
if(U==1){
zt= rnorm(1,zt[(t-1)],sd_trans)
}else if(U==2){
zt = rnorm(1,zt[(t-1)]+1,sd_trans)
}else{
zt= rnorm(1,zt[(t-1)]+2,sd_trans)
}
return(zt)
}
emisssion_func=function(zt,t,sd_emiss){
U=sample(1:3,1)
#
if(U==1){
xt= rnorm(1,zt[(t)],sd_emiss)
}else if(U==2){
xt = rnorm(1,zt[(t)]+1,sd_emiss)
}else{
xt= rnorm(1,zt[(t)]+2,sd_emiss)
}
return(xt)
}
make_model=function(nTimes,upper_limit,sd_trans,sd_emiss){
zt=double(nTimes)
#
xt=double(nTimes)
#
for(time in 1:nTimes){
zt[time]=transition_func(zt,time,upper_limit,sd_trans)
xt[time]=emisssion_func(zt,time,sd_emiss)
}
return(list(states=xt,observations=zt))
}
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density Transition")
polygon(density(x$states),col="red",density=15)
plot(density(x$observations),col="cornflowerblue",lwd=2,
main="Density Emission")
polygon(density(x$observations),col="red",density=15)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density States")
polygon(density(x$states),col="red",density=15)
plot(density(x$observations),col="cornflowerblue",lwd=2,
main="Density Observations")
polygon(density(x$observations),col="red",density=15)
obs=x$observations
particles=sample(obs,100,replace = T) ; particles
transition_func=function(zt,t,upper_limit,sd_trans){
U=sample(1:3,1)
#
if(t==1){
zt=runif(1,0,upper_limit)
return(zt)
}
if(U==1){
zt= rnorm(1,zt[(t-1)],sd_trans)
}else if(U==2){
zt = rnorm(1,zt[(t-1)]+1,sd_trans)
}else{
zt= rnorm(1,zt[(t-1)]+2,sd_trans)
}
return(zt)
}
emisssion_func=function(zt,t,sd_emiss){
U=sample(1:3,1)
#
if(U==1){
xt= rnorm(1,zt[(t)],sd_emiss)
}else if(U==2){
xt = rnorm(1,zt[(t)]+1,sd_emiss)
}else{
xt= rnorm(1,zt[(t)]+2,sd_emiss)
}
return(xt)
}
make_model=function(nTimes,upper_limit,sd_trans,sd_emiss){
zt=double(nTimes)
#
xt=double(nTimes)
#
for(time in 1:nTimes){
zt[time]=transition_func(zt,time,upper_limit,sd_trans)
xt[time]=emisssion_func(zt,time,sd_emiss)
}
return(list(states=zt,observations=xt))
}
x=make_model(100,100,1,1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(1:100,x$states,col="darkcyan",pch=3,
panel.first = grid(25,25),ylab="",xlab="timesteps",
main="Plot of States and Observations")
lines(1:100,x$observations,col="red",lwd=2)
legend("topleft",legend=c("States","Observations"),
col = c("darkcyan","red"),lty=c(NA,1),pch=c(3,NA))
#
plot(density(x$states),col="cornflowerblue",lwd=2,
main = "Density States")
polygon(density(x$states),col="red",density=15)
plot(density(x$observations),col="cornflowerblue",lwd=2,
main="Density Observations")
polygon(density(x$observations),col="red",density=15)
obs=x$observations
particles=sample(obs,100,replace = T) ; particles
sapply(particles,function(y){y/sum(particles)})
